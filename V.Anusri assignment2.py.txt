# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fPxBHgb_D5fRBD5TR-_a-NQxdhT-2wBP
"""

import numpy as np
import pandas as pd

df = pd.read_csv("/content/Churn_Modelling (1).csv")
df

import matplotlib.pyplot as plt

import seaborn as sns

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

df[['CustomerId','Surname','CreditScore','Geography','Age','Tenure']].describe()

import seaborn as sns
sns.histplot(df.Age,kde=True)

import seaborn as sns
sns.countplot(df.Gender)

df[['CustomerId','Surname','CreditScore','Geography','Gender','Age']].corr()

import matplotlib.pyplot as plt
sns.scatterplot(df.CreditScore,df.Age)
plt.ylim(0,100)

import seaborn as sns
sns.pairplot(data=df[['CustomerId','Geography','Gender','CreditScore','Age','Balance']],hue = 'Balance')

df['Age'].mode()

df["Age"].mean()

round(df["Age"].mean(),5)

df["Age"].median()

df.columns

df["NumOfProducts"].value_counts()

df.dtypes

df.head()

df.describe()

df.isna().any()

df.isnull().sum()

df.isnull()

df.notnull()

import seaborn as sns
sns.boxplot(x=df['Age'])

sns.boxplot(x=df['Tenure'])

import pandas as pd
df = pd.read_csv("/content/Churn_Modelling (1).csv", header =None)

cols = df.columns
num_cols = df._get_numeric_data().columns
num_cols

list(set(cols) - set(num_cols))

# x -Independent
# y -Dependent
df =pd.read_csv("/content/Churn_Modelling (1).csv")
x =df.drop('Exited',axis=1)
y=df['Exited']

x.head()

from sklearn import linear_model
from sklearn.preprocessing import StandardScaler
scale = StandardScaler()

X = df[['Balance', 'Tenure']]

scaledX = scale.fit_transform(X)

print(scaledX)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)
print('X Train shape:{},Y.Train SHape:{}'.format(x_train.shape,y_train.shape))

print('X Test Shape :{},Y Test SHape:{}'.format(x_test.shape,y_test.shape))
